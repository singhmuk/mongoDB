{"ast":null,"code":"import _objectSpread from \"/home/mukeshs/Database/mongoDB/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_CONTACT, GET_CONTACTS, CLEAR_CONTACTS, CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, DELETE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../actions/types\";\nconst initialState = {\n  contacts: [],\n  current: null,\n  filter: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: payload,\n        loading: false\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [payload, ...state.contacts],\n        current: null,\n        loading: false\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case CLEAR_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: [],\n        contact: null,\n        filter: null,\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact._id === payload._id ? contact = payload : contact),\n        loading: false\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: payload,\n        loading: false\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filter: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex) || contact.phone.match(regex);\n        }),\n        loading: false\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filter: null,\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact._id !== payload),\n        loading: false\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mukeshs/Database/mongoDB/client/src/reducers/contact.js"],"names":["ADD_CONTACT","GET_CONTACTS","CLEAR_CONTACTS","CONTACT_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","initialState","contacts","current","filter","loading","error","state","action","type","payload","contact","map","_id","regex","RegExp","name","match","email","phone"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,cAApC,EAAoDC,aAApD,EAAmEC,WAAnE,EAAgFC,aAAhF,EAA+FC,cAA/F,EAA+GC,cAA/G,EAA+HC,eAA/H,EAAgJC,YAAhJ,QAAoK,kBAApK;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAwC;AAAA,QAC9CC,IAD8C,GAC7BD,MAD6B,CAC9CC,IAD8C;AAAA,QACxCC,OADwC,GAC7BF,MAD6B,CACxCE,OADwC;;AAGrD,UAAOD,IAAP;AACE,SAAKjB,YAAL;AACE,+BACKe,KADL;AAEEL,QAAAA,QAAQ,EAAEQ,OAFZ;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKd,WAAL;AACE,+BACKgB,KADL;AAEEL,QAAAA,QAAQ,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,QAAnB,CAFZ;AAGEC,QAAAA,OAAO,EAAE,IAHX;AAIEE,QAAAA,OAAO,EAAE;AAJX;;AAOF,SAAKX,aAAL;AACE,+BACKa,KADL;AAEED,QAAAA,KAAK,EAAEI,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKZ,cAAL;AACE,+BACKc,KADL;AAEEL,QAAAA,QAAQ,EAAE,EAFZ;AAGES,QAAAA,OAAO,EAAE,IAHX;AAIEP,QAAAA,MAAM,EAAE,IAJV;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAQF,SAAKR,cAAL;AACE,+BACKU,KADL;AAEEL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeU,GAAf,CAAmBD,OAAO,IAAIA,OAAO,CAACE,GAAR,KAAgBH,OAAO,CAACG,GAAxB,GAA8BF,OAAO,GAAGD,OAAxC,GAAkDC,OAAhF,CAFZ;AAGEN,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKV,WAAL;AACE,+BACKY,KADL;AAEEJ,QAAAA,OAAO,EAAEO,OAFX;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKN,eAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,MAAM,EAAEG,KAAK,CAACL,QAAN,CAAeE,MAAf,CAAsBO,OAAO,IAAI;AACvC,gBAAMG,KAAK,GAAG,IAAIC,MAAJ,WAAcL,OAAd,GAAyB,IAAzB,CAAd;AAEA,iBAAOC,OAAO,CAACK,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BH,OAAO,CAACO,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAA7B,IAA2DH,OAAO,CAACQ,KAAR,CAAcF,KAAd,CAAoBH,KAApB,CAAlE;AACD,SAJO,CAFV;AAOET,QAAAA,OAAO,EAAE;AAPX;;AAUF,SAAKL,YAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,MAAM,EAAE,IAFV;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKP,cAAL;AACE,+BACKS,KADL;AAEEL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeE,MAAf,CAAsBO,OAAO,IAAIA,OAAO,CAACE,GAAR,KAAgBH,OAAjD,CAFZ;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKT,aAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,OAAO,EAAE,IAFX;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAMF;AACE,aAAOE,KAAP;AA/EJ;AAiFD","sourcesContent":["import { ADD_CONTACT, GET_CONTACTS, CLEAR_CONTACTS, CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, DELETE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../actions/types\";\n\nconst initialState = {\n  contacts: [],\n  current: null,\n  filter: null,\n  loading: true,\n  error: {}\n}\n\nexport default function(state = initialState, action ) {\n  const {type, payload} = action;\n\n  switch(type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: payload,\n        loading: false\n      }\n\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [payload, ...state.contacts],\n        current: null,\n        loading: false\n      }\n\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      }\n\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: [],\n        contact: null,\n        filter: null,\n        loading: false\n      }\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact._id === payload._id ? contact = payload : contact) ,\n        loading: false\n      }\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: payload,\n        loading: false\n      }\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filter: state.contacts.filter(contact => {\n          const regex = new RegExp(`${payload}`, 'gi');\n\n          return contact.name.match(regex) || contact.email.match(regex) || contact.phone.match(regex);\n        }),\n        loading: false\n      }\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filter: null,\n        loading: false\n      }\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact._id !== payload ),\n        loading: false\n      }\n\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n        loading: false\n      }\n\n    default: \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}