{"ast":null,"code":"import _objectSpread from \"/home/mukeshs/Database/mongoDB/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mukeshs/Database/mongoDB/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mukeshs/Database/mongoDB/client/src/components/contacts/ContactForm.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact, clearCurrent, updateContact } from '../../actions/contact';\n\nconst ContactForm = ({\n  addContact,\n  clearCurrent,\n  updateContact,\n  current\n}) => {\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        type: ''\n      });\n    }\n  }, [current]);\n\n  const _useState = useState({\n    name: '',\n    type: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        type = contact.type;\n\n  const onChange = e => {\n    setContact(_objectSpread({}, contact, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current !== null) {\n      updateContact(contact);\n    } else {\n      addContact(contact);\n    }\n\n    clearCurrent();\n    setContact({\n      name: '',\n      type: ''\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    place: \"type\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === \"personal\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \"Personal \\xA0\", React.createElement(\"input\", {\n    type: \"radio\",\n    place: \"type\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === \"professional\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"btn btn-primary btn-block rounded-0\",\n    type: \"submit\",\n    value: current ? \"Update Contact\" : \"Add Contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: () => clearCurrent(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Clear\"))));\n};\n\nconst mapStateToProps = state => ({\n  current: state.contact.current\n});\n\nexport default connect(mapStateToProps, {\n  addContact,\n  updateContact,\n  clearCurrent\n})(ContactForm);","map":{"version":3,"sources":["/home/mukeshs/Database/mongoDB/client/src/components/contacts/ContactForm.js"],"names":["React","Fragment","useState","useEffect","connect","addContact","clearCurrent","updateContact","ContactForm","current","setContact","name","type","contact","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { addContact, clearCurrent, updateContact } from '../../actions/contact'\n\nconst ContactForm = ({ addContact, clearCurrent, updateContact, current }) => {\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    }\n    else {\n      setContact({\n        name: '',\n        type: ''\n      })\n    }\n  }, [current]);\n\n  const [contact, setContact] = useState({\n    name: '',\n    type: '',\n  });\n\n  const { name,type } = contact;\n\n  const onChange = e => {\n    setContact({ ...contact, [e.target.name]: e.target.value })\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current !== null) {\n      updateContact(contact);\n    }\n    else {\n      addContact(contact);\n    }\n\n    clearCurrent();\n\n    setContact({\n      name: '',\n      type: ''\n    });\n  }\n\n  return (\n    <Fragment>\n      <form onSubmit={e => onSubmit(e)}>\n        <h2 className=\"text-primary\">{current ? 'Edit Contact' : 'Add Contact'}</h2>\n        <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)} />\n\n        <h5>Contact Type</h5>\n        <input type=\"radio\" place=\"type\" name=\"type\" value=\"personal\" checked={type === \"personal\"} onChange={e => onChange(e)} />Personal &nbsp;\n        <input type=\"radio\" place=\"type\" name=\"type\" value=\"professional\" checked={type === \"professional\"} onChange={e => onChange(e)} />Professional\n\n        <div>\n          <input className=\"btn btn-primary btn-block rounded-0\" type=\"submit\" value={current ? \"Update Contact\" : \"Add Contact\"} />\n        </div>\n\n        {\n          current &&\n          <div>\n            <button className=\"btn btn-light btn-block\" onClick={() => clearCurrent()}>Clear</button>\n          </div>\n        }\n      </form>\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = state => ({\n  current: state.contact.current\n})\n\n\nexport default connect(mapStateToProps, { addContact, updateContact, clearCurrent })(ContactForm)\n"]},"metadata":{},"sourceType":"module"}